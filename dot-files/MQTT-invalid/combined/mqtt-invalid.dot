digraph "" {
	graph [configurations="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito"];
	node [label="\N"];
	__start0	[feature=True,
		label="",
		shape=none];
	b	[feature=True];
	__start0 -> b	[key=0];
	b -> b	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="PublishQoS0Dup / ConnectionClosed"];
	b -> b	[key=1,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="PublishQoSMinus1 / ConnectionClosed"];
	b -> b	[key=2,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="PublishWildCard / ConnectionClosed"];
	b -> b	[key=3,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="SubscribeWildMatch / ConnectionClosed"];
	b -> b	[key=4,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="UnSubscribeWildMatch / ConnectionClosed"];
	b -> b	[key=5,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="Subscribe / ConnectionClosed"];
	b -> b	[key=6,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="SubscribeMinus1 / ConnectionClosed"];
	b -> b	[key=7,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="UnSubScribe / ConnectionClosed"];
	b -> b	[key=8,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt|mosquito",
		label="Disconnect / ConnectionClosed"];
	b -> b	[key=9,
		feature="ActiveMQ|VerneMQ|hbmqtt|mosquito",
		label="ConnectNonClean / ConnectionClosed__ConnAckPacket(false,2)"];
	d	[feature="ActiveMQ|mosquito"];
	b -> d	[key=0,
		feature=mosquito,
		label="Connect / ConnAckPacket(false,0)"];
	e	[feature="ActiveMQ|VerneMQ|emqtt|hbmqtt"];
	b -> e	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt",
		label="Connect / ConnAckPacket(false,0)"];
	b -> e	[key=1,
		feature=emqtt,
		label="ConnectNonClean / ConnAckPacket(false,0)"];
	c	[feature="ActiveMQ|VerneMQ|emqtt|mosquito"];
	c -> b	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="Connect / ConnectionClosed"];
	c -> b	[key=1,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="ConnectNonClean / ConnectionClosed"];
	c -> b	[key=2,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="PublishQoSMinus1 / ConnectionClosed"];
	c -> b	[key=3,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="SubscribeMinus1 / ConnectionClosed"];
	c -> b	[key=4,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="Disconnect / ConnectionClosed"];
	c -> b	[key=5,
		feature="VerneMQ|emqtt|mosquito",
		label="PublishWildCard / ConnectionClosed"];
	c -> c	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="PublishQoS0Dup / Pub(my_topic,messageQos0)"];
	c -> c	[key=1,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="UnSubscribeWildMatch / UnSubAck"];
	c -> c	[key=2,
		feature="ActiveMQ|VerneMQ|emqtt|mosquito",
		label="Subscribe / SubAck"];
	c -> c	[key=3,
		feature="VerneMQ|emqtt|mosquito",
		label="SubscribeWildMatch / SubAck"];
	c -> c	[key=4,
		feature=ActiveMQ,
		label="PublishWildCard / Empty"];
	c -> d	[key=0,
		feature=mosquito,
		label="UnSubScribe / UnSubAck"];
	c -> e	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt",
		label="UnSubScribe / UnSubAck"];
	g	[feature=ActiveMQ];
	c -> g	[key=0,
		feature=ActiveMQ,
		label="SubscribeWildMatch / SubAck"];
	d -> b	[key=0,
		feature="ActiveMQ|mosquito",
		label="Connect / ConnectionClosed"];
	d -> b	[key=1,
		feature="ActiveMQ|mosquito",
		label="ConnectNonClean / ConnectionClosed"];
	d -> b	[key=2,
		feature="ActiveMQ|mosquito",
		label="PublishQoSMinus1 / ConnectionClosed"];
	d -> b	[key=3,
		feature="ActiveMQ|mosquito",
		label="SubscribeMinus1 / ConnectionClosed"];
	d -> b	[key=4,
		feature="ActiveMQ|mosquito",
		label="Disconnect / ConnectionClosed"];
	d -> b	[key=5,
		feature=mosquito,
		label="PublishWildCard / ConnectionClosed"];
	d -> c	[key=0,
		feature=mosquito,
		label="Subscribe / SubAck"];
	d -> d	[key=0,
		feature="ActiveMQ|mosquito",
		label="PublishQoS0Dup / Empty"];
	d -> d	[key=1,
		feature="ActiveMQ|mosquito",
		label="SubscribeWildMatch / SubAck"];
	d -> d	[key=2,
		feature="ActiveMQ|mosquito",
		label="UnSubScribe / UnSubAck"];
	d -> d	[key=3,
		feature=mosquito,
		label="UnSubscribeWildMatch / UnSubAck"];
	d -> d	[key=4,
		feature=ActiveMQ,
		label="PublishWildCard / Pub(wild/+,match)"];
	d -> e	[key=0,
		feature=ActiveMQ,
		label="UnSubscribeWildMatch / UnSubAck"];
	d -> g	[key=0,
		feature=ActiveMQ,
		label="Subscribe / SubAck"];
	e -> b	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt",
		label="Disconnect / ConnectionClosed"];
	e -> b	[key=1,
		feature="ActiveMQ|VerneMQ|emqtt",
		label="Connect / ConnectionClosed"];
	e -> b	[key=2,
		feature="ActiveMQ|VerneMQ|emqtt",
		label="ConnectNonClean / ConnectionClosed"];
	e -> b	[key=3,
		feature="ActiveMQ|VerneMQ|emqtt",
		label="PublishQoSMinus1 / ConnectionClosed"];
	e -> b	[key=4,
		feature="ActiveMQ|VerneMQ|emqtt",
		label="SubscribeMinus1 / ConnectionClosed"];
	e -> b	[key=5,
		feature="VerneMQ|emqtt",
		label="PublishWildCard / ConnectionClosed"];
	e -> c	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt",
		label="Subscribe / SubAck"];
	e -> d	[key=0,
		feature=ActiveMQ,
		label="SubscribeWildMatch / SubAck"];
	e -> e	[key=0,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt",
		label="PublishQoS0Dup / Empty"];
	e -> e	[key=1,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt",
		label="UnSubscribeWildMatch / UnSubAck"];
	e -> e	[key=2,
		feature="ActiveMQ|VerneMQ|emqtt|hbmqtt",
		label="UnSubScribe / UnSubAck"];
	e -> e	[key=3,
		feature="VerneMQ|emqtt|hbmqtt",
		label="SubscribeWildMatch / SubAck"];
	e -> e	[key=4,
		feature=hbmqtt,
		label="Connect / Empty"];
	e -> e	[key=5,
		feature=hbmqtt,
		label="ConnectNonClean / Empty"];
	e -> e	[key=6,
		feature=hbmqtt,
		label="PublishQoSMinus1 / Empty"];
	e -> e	[key=7,
		feature=hbmqtt,
		label="Subscribe / SubAck"];
	e -> e	[key=8,
		feature=hbmqtt,
		label="SubscribeMinus1 / SubAck"];
	e -> e	[key=9,
		feature=ActiveMQ,
		label="PublishWildCard / Empty"];
	f	[feature=hbmqtt];
	e -> f	[key=0,
		feature=hbmqtt,
		label="PublishWildCard / Empty"];
	f -> f	[key=0,
		feature=hbmqtt,
		label="Connect / Empty"];
	f -> f	[key=1,
		feature=hbmqtt,
		label="ConnectNonClean / Empty"];
	f -> f	[key=2,
		feature=hbmqtt,
		label="PublishQoS0Dup / Empty"];
	f -> f	[key=3,
		feature=hbmqtt,
		label="PublishQoSMinus1 / Empty"];
	f -> f	[key=4,
		feature=hbmqtt,
		label="PublishWildCard / Empty"];
	f -> f	[key=5,
		feature=hbmqtt,
		label="SubscribeWildMatch / Empty"];
	f -> f	[key=6,
		feature=hbmqtt,
		label="UnSubscribeWildMatch / Empty"];
	f -> f	[key=7,
		feature=hbmqtt,
		label="Subscribe / Empty"];
	f -> f	[key=8,
		feature=hbmqtt,
		label="SubscribeMinus1 / Empty"];
	f -> f	[key=9,
		feature=hbmqtt,
		label="UnSubScribe / Empty"];
	f -> f	[key=10,
		feature=hbmqtt,
		label="Disconnect / Empty"];
	g -> b	[key=0,
		feature=ActiveMQ,
		label="Connect / ConnectionClosed"];
	g -> b	[key=1,
		feature=ActiveMQ,
		label="ConnectNonClean / ConnectionClosed"];
	g -> b	[key=2,
		feature=ActiveMQ,
		label="PublishQoSMinus1 / ConnectionClosed"];
	g -> b	[key=3,
		feature=ActiveMQ,
		label="SubscribeMinus1 / ConnectionClosed"];
	g -> b	[key=4,
		feature=ActiveMQ,
		label="Disconnect / ConnectionClosed"];
	g -> c	[key=0,
		feature=ActiveMQ,
		label="UnSubscribeWildMatch / UnSubAck"];
	g -> d	[key=0,
		feature=ActiveMQ,
		label="UnSubScribe / UnSubAck"];
	g -> g	[key=0,
		feature=ActiveMQ,
		label="PublishQoS0Dup / Pub(my_topic,messageQos0)"];
	g -> g	[key=1,
		feature=ActiveMQ,
		label="PublishWildCard / Pub(wild/+,match)"];
	g -> g	[key=2,
		feature=ActiveMQ,
		label="SubscribeWildMatch / SubAck"];
	g -> g	[key=3,
		feature=ActiveMQ,
		label="Subscribe / SubAck"];
}
